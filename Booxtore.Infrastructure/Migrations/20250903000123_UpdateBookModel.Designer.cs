// <auto-generated />
using System;
using Booxtore.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booxtore.Infrastructure.Migrations
{
    [DbContext(typeof(BooxtoreContext))]
    [Migration("20250903000123_UpdateBookModel")]
    partial class UpdateBookModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booxtore.Domain.Models.AdminAction", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("action_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionId"));

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("action_type");

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("admin_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("TargetId")
                        .HasColumnType("int")
                        .HasColumnName("target_id");

                    b.Property<string>("TargetTable")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("target_table");

                    b.HasKey("ActionId")
                        .HasName("PK__Admin_Ac__74EFC21708F2B4D2");

                    b.HasIndex("AdminId");

                    b.ToTable("Admin_Actions", (string)null);
                });

            modelBuilder.Entity("Booxtore.Domain.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("biography");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("AuthorId")
                        .HasName("PK__Authors__86516BCFD54FF63F");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    b.Property<int?>("AvailableCopies")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("available_copies");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("CoverImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cover_image_url");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsAvailableForBorrow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_available_for_borrow");

                    b.Property<bool?>("IsAvailableForPurchase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_available_for_purchase");

                    b.Property<bool?>("IsFree")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_free");

                    b.Property<string>("Isbn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("isbn");

                    b.Property<int?>("Pages")
                        .HasColumnType("int")
                        .HasColumnName("pages");

                    b.Property<string>("PdfFileUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pdf_file_url");

                    b.Property<decimal?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("price");

                    b.Property<DateOnly?>("PublicationDate")
                        .HasColumnType("date")
                        .HasColumnName("publication_date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("active")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<int?>("TotalCopies")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("total_copies");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("BookId")
                        .HasName("PK__Books__490D1AE12ED3F536");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "Isbn" }, "UQ__Books__99F9D0A4E5DE0733")
                        .IsUnique()
                        .HasFilter("[isbn] IS NOT NULL");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.BorrowingRecord", b =>
                {
                    b.Property<int>("BorrowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("borrow_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorrowId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<DateTime?>("BorrowDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("borrow_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("due_date");

                    b.Property<decimal?>("FineAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("fine_amount");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime")
                        .HasColumnName("return_date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("active")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("BorrowId")
                        .HasName("PK__Borrowin__262B57A0468725A1");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Borrowing_Records", (string)null);
                });

            modelBuilder.Entity("Booxtore.Domain.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__D54EE9B4B8732378");

                    b.HasIndex(new[] { "Name" }, "UQ__Categori__72E12F1BFCF86850")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.OrderItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_price");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("unit_price");

                    b.HasKey("ItemId")
                        .HasName("PK__Order_It__52020FDD188DDE3A");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("Order_Items", (string)null);
                });

            modelBuilder.Entity("Booxtore.Domain.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("completed_date");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("order_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_method");

                    b.Property<string>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("pending")
                        .HasColumnName("payment_status");

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("total_amount");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("OrderId")
                        .HasName("PK__Purchase__465962295194A6D3");

                    b.HasIndex("UserId");

                    b.ToTable("Purchase_Orders", (string)null);
                });

            modelBuilder.Entity("Booxtore.Domain.Models.ReadingSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("session_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<int?>("LastPage")
                        .HasColumnType("int")
                        .HasColumnName("last_page");

                    b.Property<int?>("PagesRead")
                        .HasColumnType("int")
                        .HasColumnName("pages_read");

                    b.Property<DateTime?>("StartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("start_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("SessionId")
                        .HasName("PK__Reading___69B13FDC7C10D54A");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reading_Sessions", (string)null);
                });

            modelBuilder.Entity("Booxtore.Domain.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<string>("ReviewText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("review_text");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("active")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__60883D90D7885EF3");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("role");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370F7EAC11EC");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E61640F074CEA")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.UserLibrary", b =>
                {
                    b.Property<int>("LibraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("library_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibraryId"));

                    b.Property<string>("AccessType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("access_type");

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("purchase_date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("LibraryId")
                        .HasName("PK__User_Lib__7A2F73CAFAFDDE1A");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Libraries", (string)null);
                });

            modelBuilder.Entity("Booxtore.Domain.Models.AdminAction", b =>
                {
                    b.HasOne("Booxtore.Domain.Models.User", "Admin")
                        .WithMany("AdminActions")
                        .HasForeignKey("AdminId")
                        .HasConstraintName("FK__Admin_Act__admin__7B5B524B");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.Book", b =>
                {
                    b.HasOne("Booxtore.Domain.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__Books__author_id__45F365D3");

                    b.HasOne("Booxtore.Domain.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Books__category___46E78A0C");

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.BorrowingRecord", b =>
                {
                    b.HasOne("Booxtore.Domain.Models.Book", "Book")
                        .WithMany("BorrowingRecords")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__Borrowing__book___59FA5E80");

                    b.HasOne("Booxtore.Domain.Models.User", "User")
                        .WithMany("BorrowingRecords")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Borrowing__user___59063A47");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.OrderItem", b =>
                {
                    b.HasOne("Booxtore.Domain.Models.Book", "Book")
                        .WithMany("OrderItems")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__Order_Ite__book___6A30C649");

                    b.HasOne("Booxtore.Domain.Models.PurchaseOrder", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Order_Ite__order__693CA210");

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.PurchaseOrder", b =>
                {
                    b.HasOne("Booxtore.Domain.Models.User", "User")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Purchase___user___628FA481");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.ReadingSession", b =>
                {
                    b.HasOne("Booxtore.Domain.Models.Book", "Book")
                        .WithMany("ReadingSessions")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__Reading_S__book___6E01572D");

                    b.HasOne("Booxtore.Domain.Models.User", "User")
                        .WithMany("ReadingSessions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reading_S__user___6D0D32F4");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.Review", b =>
                {
                    b.HasOne("Booxtore.Domain.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__Reviews__book_id__73BA3083");

                    b.HasOne("Booxtore.Domain.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reviews__user_id__72C60C4A");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.UserLibrary", b =>
                {
                    b.HasOne("Booxtore.Domain.Models.Book", "Book")
                        .WithMany("UserLibraries")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK__User_Libr__book___5441852A");

                    b.HasOne("Booxtore.Domain.Models.User", "User")
                        .WithMany("UserLibraries")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__User_Libr__user___534D60F1");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.Book", b =>
                {
                    b.Navigation("BorrowingRecords");

                    b.Navigation("OrderItems");

                    b.Navigation("ReadingSessions");

                    b.Navigation("Reviews");

                    b.Navigation("UserLibraries");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.PurchaseOrder", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Booxtore.Domain.Models.User", b =>
                {
                    b.Navigation("AdminActions");

                    b.Navigation("BorrowingRecords");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("ReadingSessions");

                    b.Navigation("Reviews");

                    b.Navigation("UserLibraries");
                });
#pragma warning restore 612, 618
        }
    }
}
