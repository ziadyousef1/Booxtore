@model Booxtore.Presentation.ViewModels.BookDetailsViewModel
@{
    ViewData["Title"] = Model.Book.Title;
}

@section Styles {
    <link rel="stylesheet" href="~/css/book-details.css" asp-append-version="true" />
}

<section class="py-5">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Shop")">Shop</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Book.Title</li>
            </ol>
        </nav>

        <div class="row">
            <div class="col-lg-6">
                <div class="card">
                    <img src="@(string.IsNullOrEmpty(Model.Book.CoverImageUrl) ? "/images/product-item1.png" : Model.Book.CoverImageUrl)" 
                         class="card-img-top" alt="@Model.Book.Title" style="height: 500px; object-fit: cover;">
                </div>
            </div>
            <div class="col-lg-6">
                <div class="product-info">
                    <h1 class="mb-3 fw-bold">@Model.Book.Title</h1>
                    <p class="lead text-primary fs-5 mb-3">
                        <i class="fas fa-user-edit me-2"></i>by @(Model.Book.Author?.Name ?? "Unknown Author")
                    </p>
                    
                    <div class="mb-3">
                        <span class="badge bg-primary fs-6 px-3 py-2">@(Model.Book.Category?.Name ?? "Unknown Category")</span>
                        @if (!string.IsNullOrEmpty(Model.Book.Status))
                        {
                            <span class="badge bg-success fs-6 px-3 py-2 ms-2">@Model.Book.Status</span>
                        }
                    </div>

                    <!-- Price Section -->
                    <div class="price-section mb-4">
                        @if (Model.Book.IsFree == true)
                        {
                            <div class="free-book-card p-3 border border-success rounded-3 bg-light">
                                <div class="d-flex align-items-center">
                                    <div class="free-icon me-3">
                                        <div class="bg-success rounded-circle d-flex align-items-center justify-content-center" 
                                             style="width: 54px; height: 54px;">
                                            <i class="fas fa-gift text-white fs-4"></i>
                                        </div>
                                    </div>
                                    <div>
                                        <h4 class="mb-0 text-success fw-bold">FREE BOOK</h4>
                                        <small class="text-primary">Read online instantly</small>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="price-card p-3 bg-light rounded">
                                <h3 class="text-primary fw-bold mb-0">$@Model.Book.Price</h3>
                                <small class="text-muted">One-time purchase</small>
                            </div>
                        }
                    </div>

                    <!-- Action Buttons Section -->
                    <div class="action-buttons-section mb-4">
                      
                       
                            <!-- Paid Book - Show Add to Cart with Quantity -->
                            @if (Model.Book.IsAvailableForPurchase == true && Model.Book.IsFree != true)
                            {
                              
                                @if (Model.Book.AvailableCopies.HasValue && Model.Book.AvailableCopies <= 5)
                                {
                                    <div class="alert alert-warning mt-3 mb-0">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        Only @Model.Book.AvailableCopies copies left in stock!
                                    </div>
                                }
                            }
                                                   
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Book.Description))
                    {
                        <div class="description-card card mb-4">
                            <div class="card-header bg-light">
                                <h6 class="mb-0"><i class="fas fa-align-left me-2"></i>Description</h6>
                            </div>
                            <div class="card-body">
                                <p class="mb-0">@Model.Book.Description</p>
                            </div>
                        </div>
                    }

                    <!-- Book Information Card -->
                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <h6 class="mb-0"><i class="fas fa-info-circle me-2"></i>Book Information</h6>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                @if (!string.IsNullOrEmpty(Model.Book.Isbn))
                                {
                                    <div class="col-sm-6">
                                        <div class="info-item">
                                            <small class="text-muted text-uppercase fw-bold">ISBN</small>
                                            <div class="fw-bold text-dark">@Model.Book.Isbn</div>
                                        </div>
                                    </div>
                                }
                                @if (Model.Book.Pages.HasValue)
                                {
                                    <div class="col-sm-6">
                                        <div class="info-item">
                                            <small class="text-muted text-uppercase fw-bold">Pages</small>
                                            <div class="fw-bold text-dark">@Model.Book.Pages</div>
                                        </div>
                                    </div>
                                }
                                @if (Model.Book.PublicationDate.HasValue)
                                {
                                    <div class="col-sm-6">
                                        <div class="info-item">
                                            <small class="text-muted text-uppercase fw-bold">Published</small>
                                            <div class="fw-bold text-dark">@Model.Book.PublicationDate?.ToString("MMMM yyyy")</div>
                                        </div>
                                    </div>
                                }
                                @if (Model.Book.AvailableCopies.HasValue)
                                {
                                    <div class="col-sm-6">
                                        <div class="info-item">
                                            <small class="text-muted text-uppercase fw-bold">Available</small>
                                            <div class="fw-bold text-@(Model.Book.AvailableCopies > 0 ? "success" : "danger")">
                                                @Model.Book.AvailableCopies copies
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons Card -->
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <div class="d-grid gap-2">
                                @if (Model.Book.IsFree == true)
                                {
                                    @if (Model.CurrentUserBorrowing != null)
                                    {
                                        <!-- User has already borrowed this free book -->
                                        <div class="status-card p-3 border border-info rounded-3 bg-light">
                                            <div class="d-flex align-items-center">
                                                <div class="status-icon me-3">
                                                    <div class="bg-info rounded-circle d-flex align-items-center justify-content-center" 
                                                         style="width: 48px; height: 48px;">
                                                        <i class="fas fa-book-reader text-white fs-5"></i>
                                                    </div>
                                                </div>
                                                <div>
                                                    <h6 class="mb-1 text-info fw-bold">Currently Borrowed</h6>
                                                    <small class="text-primary">Due: <strong>@Model.CurrentUserBorrowing.DueDate?.ToString("MMM dd, yyyy")</strong></small>
                                                </div>
                                            </div>
                                        </div>
                                        @if (!string.IsNullOrEmpty(Model.Book.PdfFileUrl))
                                        {
                                            <a href="@Url.Action("Read", new { id = Model.Book.BookId })" 
                                               class="btn btn-success btn-lg action-btn">
                                                <i class="fas fa-book-open me-2"></i> Continue Reading
                                            </a>
                                        }
                                        <a href="@Url.Action("Index", "Library")" class="btn btn-outline-primary btn-lg action-btn">
                                            <i class="fas fa-book me-2"></i> Go to My Library
                                        </a>
                                    }
                                    else
                                    {
                                       
                                        
                                        @if (Model.Book.IsAvailableForBorrow == true && Model.Book.AvailableCopies > 0)
                                        {
                                            <button type="button" class="btn btn-outline-primary btn-lg action-btn borrow-book-btn" 
                                                    data-book-id="@Model.Book.BookId">
                                                <i class="fas fa-book-reader me-2"></i> Borrow For Reading
                                            </button>
                                        }
                                    }
                                }
                                else
                                {
                                    @if (Model.CurrentUserBorrowing != null)
                                    {
                                        <div class="status-card p-3 border border-info rounded-3 bg-light">
                                            <div class="d-flex align-items-center">
                                                <div class="status-icon me-3">
                                                    <div class="bg-info rounded-circle d-flex align-items-center justify-content-center" 
                                                         style="width: 48px; height: 48px;">
                                                        <i class="fas fa-book-reader text-white fs-5"></i>
                                                    </div>
                                                </div>
                                                <div>
                                                    <h6 class="mb-1 text-info fw-bold">Currently Borrowed</h6>
                                                    <small class="text-primary">Due: <strong>@Model.CurrentUserBorrowing.DueDate?.ToString("MMM dd, yyyy")</strong></small>
                                                </div>
                                            </div>
                                        </div>
                                        <a href="@Url.Action("Index", "Library")" class="btn btn-outline-primary btn-lg action-btn">
                                            <i class="fas fa-book me-2"></i> Go to My Library
                                        </a>
                                    }
                                    else
                                    {
                                        <div class="row g-2">
                                            @if (Model.Book.IsAvailableForPurchase == true)
                                            {


                                                  <button type="button" class="btn btn-outline-secondary action-btn add-to-cart-btn" 
                                                        data-book-id="@Model.Book.BookId">
                                                   <i class="fas fa-shopping-cart me-1"></i>  Add to Cart
                                                </button>

                                                  <button type="button" class="btn btn-outline-secondary action-btn buy-now-btn" 
                                                        data-book-id="@Model.Book.BookId">
                                                   <i class="fas fa-money-bill-wave"></i> Buy Now
                                                </button>
                                              
                                              
                                            }
                                          
                                        </div>
                                        
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@if (Model.RelatedBooks.Any())
{
    <section class="py-5 bg-light">
        <div class="container">
            <h3 class="mb-4">Related Books</h3>
            <div class="row">
                @foreach (var book in Model.RelatedBooks)
                {
                    <div class="col-md-3 col-sm-6 mb-4">
                        <div class="card h-100">
                            <img src="@(string.IsNullOrEmpty(book.CoverImageUrl) ? "/images/product-item1.png" : book.CoverImageUrl)" 
                                 class="card-img-top" alt="@book.Title" style="height: 200px; object-fit: cover;">
                            <div class="card-body d-flex flex-column">
                                <h6 class="card-title">
                                    <a href="@Url.Action("Details", new { id = book.BookId })" 
                                       class="text-decoration-none text-dark fw-bold">@book.Title</a>
                                </h6>
                                <p class="card-text small text-primary fs-6">by @(book.Author?.Name ?? "Unknown Author")</p>
                                <div class="mt-auto">
                                    <span class="price text-primary fw-bold fs-5">
                                        @if (book.IsFree == true)
                                        {
                                            <span class="text-success">
                                                <i class="fas fa-gift me-1"></i>Free
                                            </span>
                                        }
                                        else
                                        {
                                            <span>$@book.Price</span>
                                        }
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
}

@section Scripts {
    <script>
        // Check if book is already in cart when page loads
        $(document).ready(function() {
            var bookId = '@Model.Book.BookId';
            checkIfBookInCart(bookId);
        });

        function checkIfBookInCart(bookId) {
            $.get('@Url.Action("IsBookInCart", "Cart")', { bookId: bookId })
                .done(function(response) {
                    if (response.success && response.isInCart) {
                        updateAddToCartButton(true);
                    }
                })
                .fail(function() {
                    // If check fails, assume not in cart
                    updateAddToCartButton(false);
                });
        }

        function updateAddToCartButton(isInCart) {
            var addToCartBtn = $('.add-to-cart-btn');
            
            if (isInCart) {
                addToCartBtn
                    .prop('disabled', true)
                    .removeClass('btn-outline-secondary')
                    .addClass('btn-success')
                    .html('<i class="fas fa-check me-1"></i> In Cart')
                    .off('click'); // Remove click handler
            } else {
                addToCartBtn
                    .prop('disabled', false)
                    .removeClass('btn-success')
                    .addClass('btn-outline-secondary')
                    .html('<i class="fas fa-shopping-cart me-1"></i> Add to Cart');
            }
        }

        $('.add-to-cart-btn').click(function() {
            var bookId = $(this).data('book-id');
            var btn = $(this);
            
            // Disable button to prevent multiple clicks
            btn.prop('disabled', true);
            btn.html('<i class="fas fa-spinner fa-spin me-1"></i> Adding...');
            
            $.post('@Url.Action("AddToCart", "Cart")', { 
                bookId: bookId, 
                quantity: 1 
            })
            .done(function(response) {
                if (response.success) {
                    showSuccessToast(response.message, 'Added to Cart!');
                    
                    // Update button to show it's now in cart
                    updateAddToCartButton(true);
                    
                    // Update cart count in navigation if exists
                    var cartCountElement = $('.cart-count');
                    if (cartCountElement.length > 0 && response.cartCount) {
                        cartCountElement.text(response.cartCount);
                        cartCountElement.show();
                    }
                } else {
                    showErrorToast(response.message, 'Error');
                    // Re-enable button on error
                    btn.prop('disabled', false);
                    btn.html('<i class="fas fa-shopping-cart me-1"></i> Add to Cart');
                }
            })
            .fail(function() {
                showErrorToast('An error occurred. Please try again.', 'Connection Error');
                // Re-enable button on error
                btn.prop('disabled', false);
                btn.html('<i class="fas fa-shopping-cart me-1"></i> Add to Cart');
            });
        });

        // Buy Now functionality - redirect directly to cart
        $('.buy-now-btn').click(function() {
            // Redirect directly to cart page
            window.location.href = '@Url.Action("Index", "Cart")';
        });

        $('.borrow-book-btn').click(function() {
            var bookId = $(this).data('book-id');
            var btn = $(this);
            
            // Disable button to prevent multiple clicks
            btn.prop('disabled', true);
            btn.html('<i class="fas fa-spinner fa-spin me-1"></i> Processing...');
            
            $.post('@Url.Action("Borrow", "Shop")', { id: bookId })
                .done(function(response) {
                    if (response.success) {
                        // Show success message with beautiful animation
                        showSuccessToast(response.message, 'Book Borrowed Successfully!');
                        
                        // If there's a read URL for free books, offer to read now
                        if (response.readUrl) {
                            setTimeout(function() {
                                showInfoToast('You can now read this book online! <a href="' + response.readUrl + '" class="btn btn-sm btn-outline-light ms-2"><i class="fas fa-book-open me-1"></i>Read Now</a>', 'Ready to Read');
                            }, 1500);
                        }
                        
                        // Refresh the page to update available copies
                        setTimeout(function() {
                            location.reload();
                        }, 2500);
                    } else {
                        showErrorToast(response.message, 'Borrowing Failed');
                        // Re-enable button
                        btn.prop('disabled', false);
                        btn.html('<i class="fas fa-book-reader me-1"></i> Borrow');
                    }
                })
                .fail(function() {
                    showErrorToast('An error occurred. Please try again.', 'Connection Error');
                    // Re-enable button
                    btn.prop('disabled', false);
                    btn.html('<i class="fas fa-book-reader me-1"></i> Borrow');
                });
        });

        // Add to wishlist functionality
        $('.add-to-wishlist-btn').click(function() {
            var bookId = $(this).data('book-id');
            // TODO: Implement wishlist functionality
            showInfoToast('Add to wishlist functionality will be implemented soon!', 'Coming Soon');
        });

        // Quantity controls with improved responsiveness
        window.increaseQuantity = function() {
            var quantityInput = document.getElementById('quantity');
            var currentValue = parseInt(quantityInput.value);
            var maxValue = parseInt(quantityInput.max);
            
            if (currentValue < maxValue) {
                quantityInput.value = currentValue + 1;
                // Add visual feedback
                $(quantityInput).addClass('quantity-updated');
                setTimeout(() => $(quantityInput).removeClass('quantity-updated'), 200);
            } else {
                // Show feedback when max reached
                showInfoToast(`Maximum ${maxValue} items allowed`, 'Limit Reached');
            }
        };

        window.decreaseQuantity = function() {
            var quantityInput = document.getElementById('quantity');
            var currentValue = parseInt(quantityInput.value);
            
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
                // Add visual feedback
                $(quantityInput).addClass('quantity-updated');
                setTimeout(() => $(quantityInput).removeClass('quantity-updated'), 200);
            } else {
                // Show feedback when min reached
                showInfoToast('Minimum 1 item required', 'Minimum Reached');
            }
        };

        // Add to cart functionality
        window.addToCart = function(bookId) {
            var quantity = parseInt(document.getElementById('quantity').value);
            
            $.post('@Url.Action("AddToCart", "Cart")', { 
                bookId: bookId, 
                quantity: quantity 
            })
            .done(function(response) {
                if (response.success) {
                    showSuccessToast(response.message, 'Added to Cart!');
                    
                    // Update cart count in navigation if exists
                    var cartCountElement = $('.cart-count');
                    if (cartCountElement.length > 0 && response.cartCount) {
                        cartCountElement.text(response.cartCount);
                        cartCountElement.show();
                    }
                    
                    // Reset quantity to 1
                    document.getElementById('quantity').value = 1;
                } else {
                    showErrorToast(response.message, 'Error');
                }
            })
            .fail(function() {
                showErrorToast('An error occurred. Please try again.', 'Connection Error');
            });
        };

        // Toast notification functions
        function showSuccessToast(message, title = 'Success') {
            showToast(title, message, 'success');
        }

        function showErrorToast(message, title = 'Error') {
            showToast(title, message, 'danger');
        }

        function showInfoToast(message, title = 'Info') {
            showToast(title, message, 'info');
        }

        function showToast(title, message, type) {
            var toastId = 'toast-' + Date.now();
            var toast = $(`
                <div id="${toastId}" class="toast align-items-center text-white bg-${type} border-0 mb-2" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true" data-bs-delay="5000">
                    <div class="d-flex">
                        <div class="toast-body">
                            <strong>${title}:</strong> ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `);
            
            // Create toast container if it doesn't exist
            if ($('#toast-container').length === 0) {
                $('body').append('<div id="toast-container" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1060;"></div>');
            }
            
            $('#toast-container').append(toast);
            
            // Initialize and show the toast
            var bsToast = new bootstrap.Toast(toast[0]);
            bsToast.show();
            
            // Remove toast element after it's hidden
            toast.on('hidden.bs.toast', function() {
                $(this).remove();
            });
        }
    </script>
}
