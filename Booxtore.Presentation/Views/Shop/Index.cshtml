@model Booxtore.Presentation.ViewModels.ShopViewModel
@{
    ViewData["Title"] = "Shop";
}

<section class="py-5">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                <!-- Filters Sidebar -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Search</h5>
                    </div>
                    <div class="card-body">
                        <form method="get">
                            <div class="mb-3">
                                <input type="text" class="form-control" name="search" 
                                       value="@Model.SearchTerm" placeholder="Search books...">
                            </div>
                            <button type="submit" class="btn btn-primary w-100">Search</button>
                        </form>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Categories</h5>
                    </div>
                    <div class="card-body">
                        <div class="list-group">
                            <a href="@Url.Action("Index")" 
                               class="list-group-item list-group-item-action @(Model.SelectedCategoryId == null ? "active" : "")">
                                All Categories
                            </a>
                            @foreach (var category in Model.Categories)
                            {
                                <a href="@Url.Action("Index", new { categoryId = category.CategoryId })" 
                                   class="list-group-item list-group-item-action @(Model.SelectedCategoryId == category.CategoryId ? "active" : "")">
                                    @category.Name
                                </a>
                            }
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Authors</h5>
                    </div>
                    <div class="card-body">
                        <div class="list-group">
                            <a href="@Url.Action("Index")" 
                               class="list-group-item list-group-item-action @(Model.SelectedAuthorId == null ? "active" : "")">
                                All Authors
                            </a>
                            @foreach (var author in Model.Authors.Take(10))
                            {
                                <a href="@Url.Action("Index", new { authorId = author.AuthorId })" 
                                   class="list-group-item list-group-item-action @(Model.SelectedAuthorId == author.AuthorId ? "active" : "")">
                                    @author.Name
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-9">
                <!-- Results Header -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h2>Our Book Collection</h2>
                        <p class="text-primary">Found @Model.TotalBooks books</p>
                    </div>
                    <div class="d-flex align-items-center">
                        <label class="me-2">Sort by:</label>
                        <select class="form-select" style="width: auto;">
                            <option>Newest</option>
                            <option>Price: Low to High</option>
                            <option>Price: High to Low</option>
                            <option>Title A-Z</option>
                        </select>
                    </div>
                </div>

                <!-- Books Grid -->
                @if (Model.Books.Any())
                {
                    <div class="row">
                        @foreach (var book in Model.Books)
                        {
                            <div class="col-md-4 col-sm-6 mb-4">
                                <div class="card h-100 position-relative border rounded-3">
                                    @if (book.IsFree == true)
                                    {
                                        <div class="position-absolute top-0 start-0 m-2">
                                            <span class="badge bg-success">Free</span>
                                        </div>
                                    }
                                    else if (book.Price > 0)
                                    {
                                        <div class="position-absolute top-0 start-0 m-2">
                                            <span class="badge bg-primary">$@book.Price</span>
                                        </div>
                                    }
                                    
                                    <img src="@(string.IsNullOrEmpty(book.CoverImageUrl) ? "/images/product-item1.png" : book.CoverImageUrl)" 
                                         class="card-img-top" alt="@book.Title" style="height: 250px; object-fit: cover;">
                                    
                                    <div class="card-body d-flex flex-column">
                                        <h6 class="card-title fw-bold">
                                            <a href="@Url.Action("Details", new { id = book.BookId })" 
                                               class="text-decoration-none text-dark">@book.Title</a>
                                        </h6>
                                        <p class="card-text text-primary small">
                                            by @(book.Author?.Name ?? "Unknown Author")
                                        </p>
                                        <p class="card-text small">
                                            Category: @(book.Category?.Name ?? "Unknown")
                                        </p>
                                        @if (!string.IsNullOrEmpty(book.Description))
                                        {
                                            <p class="card-text">
                                                @(book.Description.Length > 100 ? book.Description.Substring(0, 100) + "..." : book.Description)
                                            </p>
                                        }
                                        
                                        <div class="mt-auto">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span class="price text-primary fw-bold">
                                                    @if (book.IsFree == true)
                                                    {
                                                        <span class="fs-6">Free</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="fs-6">$@book.Price</span>
                                                    }
                                                </span>
                                            </div>
                                            <div class="d-grid gap-1">
                                                @if (book.IsAvailableForPurchase == true)
                                                {
                                                    <button type="button" class="btn btn-primary btn-sm py-1 px-2 add-to-cart-btn" 
                                                            data-book-id="@book.BookId" style="font-size: 0.75rem;">
                                                        <i class="fas fa-shopping-cart me-1"></i>Buy
                                                    </button>
                                                }
                                                @if (book.IsAvailableForBorrow == true)
                                                {
                                                    <button type="button" class="btn btn-outline-primary btn-sm py-1 px-2 borrow-book-btn" 
                                                            data-book-id="@book.BookId" style="font-size: 0.75rem;">
                                                        <i class="fas fa-book-reader me-1"></i>Borrow
                                                    </button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Pagination -->
                    @if (Model.TotalPages > 1)
                    {
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">
                                @if (Model.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { 
                                            page = Model.CurrentPage - 1, 
                                            categoryId = Model.SelectedCategoryId, 
                                            authorId = Model.SelectedAuthorId, 
                                            search = Model.SearchTerm 
                                        })">Previous</a>
                                    </li>
                                }

                                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                {
                                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Index", new { 
                                            page = i, 
                                            categoryId = Model.SelectedCategoryId, 
                                            authorId = Model.SelectedAuthorId, 
                                            search = Model.SearchTerm 
                                        })">@i</a>
                                    </li>
                                }

                                @if (Model.CurrentPage < Model.TotalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { 
                                            page = Model.CurrentPage + 1, 
                                            categoryId = Model.SelectedCategoryId, 
                                            authorId = Model.SelectedAuthorId, 
                                            search = Model.SearchTerm 
                                        })">Next</a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    }
                }
                else
                {
                    <div class="text-center py-5">
                        <h4>No books found</h4>
                        <p>Try adjusting your search or filters.</p>
                        <a href="@Url.Action("Index")" class="btn btn-primary">View All Books</a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Add to cart functionality
        $('.add-to-cart-btn').click(function() {
            var bookId = $(this).data('book-id');
            // TODO: Implement add to cart functionality
            alert('Add to cart functionality will be implemented');
        });

        // Borrow book functionality
        $('.borrow-book-btn').click(function() {
            var bookId = $(this).data('book-id');
            // TODO: Implement borrow book functionality
            alert('Borrow book functionality will be implemented');
        });
    </script>
}
